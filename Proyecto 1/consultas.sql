-- punto 1
SELECT CEDULA, NOMBRE, APELLIDO, DIRECCION FROM USUARIO JOIN COMPRADOR ON 
(CEDULA = U_CC) JOIN COMPRA ON (CODCOMPR = COD_COMPRADOR) WHERE 
COMPRA.FECHA_COMPRA > '2012-06-01' AND COMPRA.FECHA_COMPRA < '2012-12-31';

--punto 2
SELECT DISTINCT (NOMBRE || ' ' || APELLIDO) AS COMPRADORES, DIRECCION, NOM_CIUDAD 
FROM CIUDAD JOIN USUARIO ON (COD_CIU = COD_CIUDAD) JOIN COMPRADOR ON (CEDULA = U_CC)
JOIN CARRITO ON (COD_CARRO = CODIGO_CARR) JOIN PRODUCTO ON (CODIGO_CARR = COD_CARR) 
WHERE CODIGO_PROD > 1000 AND CODIGO_PROD < 2000;

--punto 3
SELECT NOMBRE, APELLIDO FROM USUARIO 
WHERE SUBSTRING(NOMBRE,1,1) = 'L' AND SUBSTRING(APELLIDO,1,1) = 'S';

--punto 4
SELECT DISTINCT MARCA FROM PRODUCTO JOIN CARRITO 
ON (CARRITO.CODIGO_CARR = PRODUCTO.COD_CARR) JOIN COMPRA 
ON (COMPRA.COD_CARR = CARRITO.CODIGO_CARR)
WHERE SUBSTRING(CAST(COMPRA.FECHA_COMPRA AS VARCHAR(10)),1,4) = '2013'; 

--punto 5
SELECT CODIGO_PROD FROM PRODUCTO JOIN CARRITO 
ON (CARRITO.CODIGO_CARR = PRODUCTO.COD_CARR) JOIN COMPRA 
ON (COMPRA.COD_CARR = CARRITO.CODIGO_CARR)
WHERE SUBSTRING(CAST(COMPRA.FECHA_COMPRA AS VARCHAR(10)),1,7) = '2012-02'
OR SUBSTRING(CAST(COMPRA.FECHA_COMPRA AS VARCHAR(10)),1,7) = '2013-02'; 
-- este muestra el codigo de los productos que se compraron en el mes de feb de 2012 
-- o los que se compraron en feb de 2013 mas no el codigo del que se haya comprado en ambos
-- porque en nuestra bd, cada codigo es unico entonces no puede ser comprado dos veces
-- si el OR se cambiara por un AND no muestra nada por eso, porque cada codigo es unico

--punto 6

SELECT SUBSTRING(CAST(COMPRA.FECHA_COMPRA AS VARCHAR(10)),1,7) AS MES, 
SUM (CARRITO.CANTIDAD) AS CANTIDAD
FROM COMPRA JOIN CARRITO ON (COMPRA.COD_CARR = CARRITO.CODIGO_CARR) 
WHERE SUBSTRING(CAST(COMPRA.FECHA_COMPRA AS VARCHAR(10)),1,4) = '2012' 
GROUP BY MES ORDER BY MES ASC;

--punto 7

SELECT CEDULA, NOMBRE, APELLIDO FROM USUARIO JOIN COMPRADOR ON 
(CEDULA = U_CC) JOIN COMPRA ON (CODCOMPR = COD_COMPRADOR) 
WHERE SUBSTRING(CAST(COMPRA.FECHA_COMPRA AS VARCHAR(10)),1,4) = '2013' 
GROUP BY CEDULA HAVING COUNT (COMPRADOR.U_CC) > 3 ;
--lo hicimos mayor que 3 porque por el momento para no agregar más datos, 
--solo hay un usuario que ha comprado mas de 3 veces en el 2013


--punto 8
SELECT CODIGO_PROD ,REFERENCIA FROM PRODUCTO JOIN CARRITO 
ON (CARRITO.CODIGO_CARR = PRODUCTO.COD_CARR)
JOIN COMPRA ON (COMPRA.COD_CARR = CARRITO.CODIGO_CARR)
WHERE SUBSTRING(CAST(COMPRA.FECHA_COMPRA AS VARCHAR(10)),1,7) = '2012-02'
AND NOT SUBSTRING(CAST(COMPRA.FECHA_COMPRA AS VARCHAR(10)),1,7) = '2013-02'
ORDER BY REFERENCIA ASC;

--punto 9
SELECT FECHA_PUB, COMENTARIO, (NOMBRE ||' '|| APELLIDO) AS COMPRADOR
FROM COMENTARIO JOIN COMPRADOR ON (PUBLICADOR = CODCOMPR) JOIN USUARIO ON
(U_CC = CEDULA)
UNION
SELECT (NOMBRE ||' '|| APELLIDO) AS VENDEDOR FROM COMENTARIO LEFT OUTER JOIN VENDEDOR 
ON (COD_VENDEDOR = U_CC) LEFT OUTER JOIN USUARIO ON (U_CC = CEDULA) ;

--punto 10

--mostrar el codigo de carro, el nombre del comprador, y el total de la compra
-- en base a las compras mayores a 1500000 del año 2013

SELECT CODIGO_CARR, (NOMBRE || ' ' || APELLIDO), TOTAL AS COMPRADOR 
FROM CARRITO JOIN COMPRA ON (COD_CARR = CODIGO_CARR)
JOIN COMPRADOR ON (COD_COMPRADOR = CODCOMPR) 
JOIN USUARIO ON (U_CC = CEDULA)
WHERE TOTAL > 1500000 
AND SUBSTRING(CAST(COMPRA.FECHA_COMPRA AS VARCHAR(10)),1,4) = '2013';

--mostrar el nombre de los compradores y las veces que han comprado en la tienda
--mas de una vez

SELECT (NOMBRE || ' ' || APELLIDO) AS COMPRADOR, COUNT(U_CC) 
FROM COMPRADOR JOIN USUARIO ON (U_CC = CEDULA) GROUP BY COMPRADOR 
HAVING COUNT(U_CC) > 1 ORDER BY COUNT;

--mostrar el codigo, marca y referencia de productos juntos con los usuarios 
--que compraron dichos productos, 
SELECT CODIGO_PROD, MARCA, REFERENCIA, NOMBRE, APELLIDO FROM PRODUCTO 
JOIN CARRITO ON (PRODUCTO.COD_CARR = CARRITO.CODIGO_CARR) 
JOIN COMPRA ON (CARRITO.CODIGO_CARR = COMPRA.COD_CARR) 
JOIN COMPRADOR ON (COD_COMPRADOR = CODCOMPR)
JOIN USUARIO ON (U_CC = CEDULA)
WHERE PRODUCTO.COD_CARR !=0 ORDER BY CODIGO_PROD ASC;